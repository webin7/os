Termwork – 3 : Unix Process control system calls			Date : 03/03/2025

#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<sys/types.h>
#include<sys/wait.h>

int main()
{
    pid_t pid;

    pid=fork();//Create a child process

    if(pid<0){
        perror("Fork failed");
        exit(1);
    } else if(pid==0){//child process
        printf("Child Process : PID = %d, Parent PID = %d\n",getpid(),getppid());
        sleep(2);//Simulate some work
        printf("Child Process exiting\n");
        exit(0);
    } else{
        printf("Parent Process : PID = %d, Child PID = %d\n",getpid(),pid);
        int status;
        wait(&status);//Wait for child process to complete
        printf("Parent Process :Child exited with status %d\n",WEXITSTATUS(status));
    }

    return 0;
} 
